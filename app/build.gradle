apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.example.pawel.weatherapp"
        minSdkVersion 24
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            buildConfigField 'String', "GoogleApiKey", WeatherApp_GoogleApiKey
            buildConfigField 'String', "WEATHER_API_KEY", WeatherApp_WEATHER_API_KEY
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField 'String', "GoogleApiKey", WeatherApp_GoogleApiKey
            buildConfigField 'String', "WEATHER_API_KEY", WeatherApp_WEATHER_API_KEY
        }
    }
    allprojects {
        repositories {
            jcenter()
            mavenCentral()
            google()
            maven {
                url "https://maven.google.com"
            }
        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    productFlavors {
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support:cardview-v7:27.1.1'
    implementation 'com.android.support:recyclerview-v7:27.0.0-rc02'
    implementation 'com.android.support:appcompat-v7:27.0.0-rc02'
    //Glide
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'
    implementation project(':weatherlibwithcityphotos')
    implementation project(':weatherlib')
    implementation project(':getphotoforcity')
}
